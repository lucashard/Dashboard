@{
    ViewBag.Title = "Index";
}

<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/NuevaVersion/highcharts.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/highcharts-more.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Hightchart/exporting.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/numeral.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css"/>


<meta name="viewport" content="width=480, user-scalable=no">
<script type="text/javascript">
    var lista, listanoa, listafollowup;
    $(document).ready(function() {
        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResultGoogle", "Forecast")',
            dataType: 'json',
            contentType: false,
            processData: false,


            success: function(response) {
                //alert(response.data.TotalForecast);                
                graphicforecasted(response.data.Forecast, response.data.Client, response.data.TotalClient, response.data.TotalForecast);
            },
            error: function(response) {
                alert(response);
            }

        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResult", "Invoiced")',
            dataType: 'json',
            async: false,
            success: function(response) {
                lista = response.listadouble;
                listanoa = response.listanoa;
                listafollowup = response.listafollowup;
                graphic(lista, response.total);
                graphic2(listanoa);
                graphic3(listafollowup);
            },
            error: function(response) {
                alert(response);
            }

        });


        $.ajax({
            type: "GET",
            url: '@Url.Action("ObtainListResultGoogle", "ContractRenewals")',
            dataType: 'json',
            contentType: false,
            processData: false,
            async: false,
            success: function(response) {
                graphiccontractsrewals(response.data);
                graphicpendingrenewals(response.pending);
            },
            error: function(response) {
                alert("error");
            }

        });


    });


    $(window).resize(function() {
        $(Highcharts.charts).each(function(i, chart) {
            var height = chart.renderTo.clientHeight;
            var width = chart.renderTo.clientWidth;
            chart.setSize(width, height);
        });
    });

    function graphic(lista, total) {
        $('#total').append('Total Invoiced to date    ' + total);
        $('#invoiced').highcharts({
            chart: {
                renderTo: 'containerInvoiced',
                type: 'line'
            },
            tooltip: {
                formatter: function() {
                    return "$" + this.y.toFixed(3).toString().replace('.', ',') + ' ' + this.x;
                }
            },
            credits: {
                enabled: false
            },
            lang: {
                thousandsSep: ',',
                decimalPoint: ','
            },
            title: {
                text: 'Invoiced'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']
            },
            yAxis: {
                title: {
                    text: ''
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true

                    },
                    enableMouseTracking: true
                }
            },
            series: [
                {
                    name: '',
                    data: lista
                }
            ]
        });
    };

    function graphic2(lista) {
        $('#containernoa').highcharts({
            chart: {
                renderTo: 'containerWaiting',
                type: 'line'
            },
            credits: {
                enabled: false
            },
            lang: {
                thousandsSep: ','
            },
            yAxis: {
                // Primary yAxis
                labels: {
                    formatter: function() {
                        return numeral(this.value).format('0,0');
                    }
                }
            },
            tooltip: {
                formatter: function() {
                    return "$" + numeral(this.y).format('0,0') + ' ' + this.x;
                }
            },
            title: {
                text: 'Waiting to be invoiced'
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: ['Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true

                    },
                    enableMouseTracking: true
                }
            },
            series: [
                {
                    name: '',
                    data: lista
                }
            ]
        });
    };

    function graphic3(lista) {
        $('#followup').highcharts({
            chart: {
                renderTo: 'containerOfClaims',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: '#Of Claims (Pending Noa)'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphiccontractsrewals(lista) {
        $('#contractsrewals').highcharts({
            chart: {
                renderTo: 'containerContractsRenewals',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Contracts Renewed'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphicpendingrenewals(lista) {
        $('#pendingrenewals').highcharts({
            chart: {
                renderTo: 'containerPendingRenewals',
                type: 'column'
            },
            credits: {
                enabled: false
            },
            title: {
                text: 'Pending Renewals'
            },
            xAxis: {
                categories: [
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec',
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun'
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.y}</span><table>',
                pointFormat: '',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [
                {
                    name: ' ',
                    data: lista,
                    dataLabels: {
                        enabled: true,
                        color: 'black',
                        align: 'right',
                        format: '{point.y:.0f}', // one decimal
                        style: {
                            fontSize: '13px',
                            fontFamily: 'Verdana, sans-serif'
                        }
                    }

                }
            ]
        });
    }

    function graphicforecasted(forecast, client, totalclient, totalforecast) {
        var total = parseInt(totalforecast);
        var tabla = "<table class='table table-striped table-bordered'><thead><tr><th></th><th>Forecasted</th><th>Filed</th></tr></thead><tbody>" +
            "<tr><td>Claim Value ($)</td><td>" + numeral(totalforecast).format('$0,0') + "</td><td>" + numeral(forecast).format('$0,0') + "</td></tr>" +
            "<tr><td>#of claims</td><td>" + totalclient + "</td><td>" + client + "</td></tr>" +
            "</tbody></table>";
        $('#tabl').append(tabla);
        $('#graphic').highcharts({
                chart: {
                    type: 'gauge',
                    plotBorderWidth: 0,
                    plotBackgroundImage: null,
                    height: 200,
                    backgroundColor: 'white'
                },
                credits: {
                    enabled: false
                },
                title: {
                    text: 'Forecasted'
                },

                pane: [
                    {
                        startAngle: -45,
                        endAngle: 45,
                        background: null,
                        center: ['25%', '145%'],
                        size: 300
                    }, {
                        startAngle: -45,
                        endAngle: 45,
                        background: null,
                        center: ['75%', '145%'],
                        size: 300
                    }
                ],

                tooltip: {
                    enabled: false
                },

                yAxis: [
                    {
                        min: 0,
                        max: 10000000,
                        minorTickPosition: 'outside',
                        tickPosition: 'outside',
                        labels: {
                            rotation: 'auto',
                            distance: 0
                        },
                        plotBands: [
                            {
                                from: 0,
                                to: forecast,

                                color: '#C02316',
                                innerRadius: '100%',
                                outerRadius: '105%'
                            }
                        ],
                        pane: 0,
                        title: {
                            text: 'Filed<br/><span style="font-size:8px">' + forecast + ' Millons</span>',
                            y: -40
                        }
                    }, {
                        min: 0,
                        max: totalclient,
                        minorTickPosition: 'outside',
                        tickPosition: 'outside',
                        labels: {
                            rotation: 'auto',
                            distance: 20
                        },
                        plotBands: [
                            {
                                from: 0,
                                to: client,
                                color: '#C02316',
                                innerRadius: '100%',
                                outerRadius: '105%'
                            }
                        ],
                        pane: 1,
                        title: {
                            text: 'Client<br/><span style="font-size:8px">' + client + '</span>',
                            y: -40
                        }
                    }
                ],

                plotOptions: {
                    gauge: {
                        dataLabels: {
                            enabled: false
                        },
                        dial: {
                            radius: '100%'
                        }
                    }
                },
                responsive: {
                    rules: [
                        {
                            condition: {
                                maxWidth: 491
                            },
                            chartOptions: {
                                legend: {
                                    enabled: false
                                }
                            }
                        }
                    ]
                },

                series: [
                    {
                        name: 'Channel A',
                        data: [forecast],
                        yAxis: 0
                    }, {
                        name: 'Channel B',
                        data: [client],
                        yAxis: 1
                    }
                ]

            },

            // Let the music play
            function(chart) {


            });
    }

    Highcharts.setOptions({
        lang: {
            thousandsSep: ',',
            decimalPoint: ','
        }
    });
</script>


<div class="row" style="background-color: #F2F2F2; height: 20px;">
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div id="tabl" style="height: 197px; margin: auto; width: 354px;"></div>
    <div class="row">

        <div id="graphic" class="col-sm-12 col-lg-12 col-xs-12"></div>
    </div>
</div>
<div class="row">
    <img src="@Url.Content("~/Content/Image/separador.png")" alt=""/>
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div id="total"></div>
    <div class="row">
        <div class="col-sm-6 col-lg-6 col-xs-6" id="invoiced" style="margin-top: 13px;"></div>
        <div class="col-sm-6 col-lg-6 col-xs-6" id="containernoa" style="margin-top: 13px;"></div>
    </div>
    <div class="row"></div>
    <div class="row" style="background-color: #F2F2F2; height: 20px; margin-top: 11px;">
        <div class="col-sm-12 col-lg-12 col-xs-12" id="followup"></div>
    </div>
</div>
<div class="row">
    <img src="@Url.Content("~/Content/Image/separador.png")" alt=""/>
</div>
<div style="margin: 20px; padding: 10px 40px;">
    <div class="row">
        <div class="col-sm-6 col-lg-6 col-xs-6" id="contractsrewals"></div>
        <div class="col-sm-6 col-lg-6 col-xs-6" id="pendingrenewals"></div>
    </div>
</div>